(************************************************************
 *                      IMITATOR MODEL                      
 *
 * Railroad Gate Controller
 *
 * Description     : Simple model with 1 PTA only
 * Correctness     : "Crash" cannot happen
 * Source          : Own work
 * Author          : Étienne André
 * Modeling        : Étienne André
 * Input by        : Étienne André
 *
 * Created         : 2012/03/13
 * Last modified   : 2013/03/05
 *
 * IMITATOR version: 2.6.1
 ************************************************************)

var

(* Clocks *)
 	x, y
		: clock;

(* Parameters *)
	dApproach,  (*time between the approach and the passing*)
	dStartDown, (*time between the approach and the gate starting to go down*)
	dGetDown    (*time between the gate starts to lower, and the gate is closed*)
		: parameter;



(************************************************************)
  automaton system
(************************************************************)
synclabs: approach, startDown, endDown, pass;
initially Far;

loc Far: while True wait {}
	when True sync approach do {x' = 0} goto Approaching;

loc Approaching: while x <= dApproach & x <= dStartDown wait {}
	when x = dStartDown sync startDown do {y' = 0} goto Lowering;
	when x = dApproach sync pass do {} goto Crash;

loc Crash: while True wait {}

loc Lowering: while x <= dApproach & y <= dGetDown wait {}
	when x = dApproach sync pass do {} goto Crash;
	when y = dGetDown sync endDown do {} goto Safe;

loc Safe: while x <= dApproach wait {}
	when x = dApproach sync pass do {x' = 0, y' = 0} goto Far;
end (* system *)



(************************************************************)
(* Initial state *)
(************************************************************)

init :=
	(*------------------------------------------------------------*)
	(* Initial location *)
	(*------------------------------------------------------------*)
	& loc[system]      = Far

	(*------------------------------------------------------------*)
	(* Initial clock constraints *)
	(*------------------------------------------------------------*)
	& x = 0
	& y = 0

	(*------------------------------------------------------------*)
	(* Parameter constraints *)
	(*------------------------------------------------------------*)
	& dApproach >= 0
	& dStartDown >= 0
	& dGetDown >= 0
(* 	& dGetDown = 5 *)
;


(************************************************************)
(* Property specification *)
(************************************************************)

property := unreachable loc[system] = Crash;


(************************************************************)
(* The end *)
(************************************************************)
end
