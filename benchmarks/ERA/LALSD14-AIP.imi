(************************************************************
 *                      IMITATOR MODEL                      
 *
 * AIP from [LALSD14]
 *
 * Description     : The AIP manufacturing system [LLD06] produces two products from two types of materials. It consists of ten components, namely an I/O station, three transport units, two assembly stations, three external loops, and a central loop. Properties requiring that the routs of the two types of materials should be opposite and that output of each loop should be within three time units after its input are verified. After verification, we found that the AIP system has wrong routing problems and buffer-overflow problems. The models and the properties of the AIP example can be viewed and download from the following links. This model was extended to time in "Learning Assumptions for Compositional Verification of Timed Systems" [LALSD14]
 * Correctness     : Error state unreachable
 * Source          : R. J. Leduc, M. Lawford, and P. C. Dai. Hierarchical interface-based supervisory control of a flexible manufacturing system. IEEE Transactions on Control Systems Technology, 14(4):654â€“668, July 2006.
 * Author          : M. H. Queiroz, J. E. R. Cury, and W. M. Wonham
 * Modeling        : Lin Shang-Wei
 * Input by        : Lin Shang-Wei
 * License         : Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)

 *
 * Created         : 2016/07/05
 * Last modified   : 2016/07/06
 *
 * IMITATOR version: 2.8-beta
 ************************************************************)

 var
  c_L3_in_I1, c_I_L3_I1, xO_L3_TU3_1: clock;
  
  c_L3_in_I2, c_I_L3_I2, xO_L3_TU3_2: clock;
  
  xI_L3_TU3_1, xO_L3_I1, xproduct1, xI_L3_TU3_2, xO_L3_I2, xproduct2: clock;
  
  xI_CL_TU3_1, xO_CL_TU1_1, xI_L1_TU1_1, xO_L1_AS1_1,
  xI_L1_AS1_1, xO_L1_TU1_1, xI_CL_TU1_1,
  xI_CL_TU2_2, xO_CL_TU1_2, xI_L1_TU1_2, xO_L1_AS1_2,
  xI_L1_AS1_2, xO_L1_TU1_2, xI_CL_TU1_2: clock;
  
  xO_CL_TU2_1, xI_L2_TU2_1, xO_L2_AS2_1,
  xI_L2_AS2_1, xO_L2_TU2_1, xI_CL_TU2_1,
  xI_CL_TU3_2, xO_CL_TU2_2, xI_L2_TU2_2, xO_L2_AS2_2,
  xI_L2_AS2_2, xO_L2_TU2_2: clock;
  
  xL3_out_TU3_1: clock;
  
  xL3_out_TU3_2: clock;
  
  xO_CL_TU3_1, xO_CL_TU3_2: clock;
  
  xtask1B, xtask1A: clock;
  
  xtask2A, xtask2B: clock;


(************************************************************)
  automaton InputStation_1
(************************************************************)

synclabs: L3_in_I1, I_L3_I1, O_L3_TU3_1;

loc I0:	while True wait {}
	when True sync L3_in_I1 do {c_L3_in_I1' = 0} goto I1;
	
loc I1: while True wait {}
	when c_L3_in_I1 <= 1 sync I_L3_I1 do {c_I_L3_I1' = 0} goto I2;
	
loc I2: while True wait {}
	when True sync O_L3_TU3_1 do {xO_L3_TU3_1' = 0} goto I0;
	
end (* InputStation_1 *)


(************************************************************)
  automaton InputStation_2
(************************************************************)
synclabs: L3_in_I2, I_L3_I2, O_L3_TU3_2;

loc I0: while True wait {}
	when True sync L3_in_I2 do {c_L3_in_I2' = 0} goto I0;
	when c_L3_in_I2 <= 1 sync I_L3_I2 do {c_I_L3_I2' = 0} goto I1;

loc I1: while True wait {}
	when True sync O_L3_TU3_2 do {xO_L3_TU3_2' = 0} goto I0;

end (* InputStation_2 *)


(************************************************************)
  automaton OutputStation 
(************************************************************)
synclabs: I_L3_TU3_1, O_L3_I1, product1, I_L3_TU3_2, O_L3_I2, product2;

loc I0: while True wait {}
	when True sync I_L3_TU3_1 do {xI_L3_TU3_1' = 0} goto I1;
	when True sync I_L3_TU3_2 do {xI_L3_TU3_2' = 0} goto I3;

loc I1: while True wait {}
	when True sync O_L3_I1 do {xO_L3_I1' = 0} goto I2;

loc I2: while True wait {}
	when True sync product1 do {xproduct1' = 0} goto I0;
	
loc I3: while True wait {}
	when True sync O_L3_I2 do {xO_L3_I2' = 0} goto I4;

loc I4: while True wait {}
	when True sync product2 do {xproduct2' = 0} goto I0;

end (* OutputStation *)


(************************************************************)
  automaton  TransportUnit_1 
(************************************************************)
synclabs: 
I_CL_TU3_1, O_CL_TU1_1, I_L1_TU1_1, O_L1_AS1_1,
I_L1_AS1_1, O_L1_TU1_1, I_CL_TU1_1,
I_CL_TU2_2, O_CL_TU1_2, I_L1_TU1_2, O_L1_AS1_2,
I_L1_AS1_2, O_L1_TU1_2, I_CL_TU1_2;

loc T0: while True wait {}
	when True sync I_CL_TU3_1 do {xI_CL_TU3_1' = 0} goto T1;
	when True sync I_L1_AS1_1 do {xI_L1_AS1_1' = 0} goto T7;
	when True sync I_CL_TU2_2 do {xI_CL_TU2_2' = 0} goto T4;
	when True sync I_L1_AS1_2 do {xI_L1_AS1_2' = 0} goto T9;

loc T1: while True wait {}
	when True sync O_CL_TU1_1 do {xO_CL_TU1_1' = 0} goto T2;

loc T2: while True wait {}
	when True sync I_L1_TU1_1 do {xI_L1_TU1_1' = 0} goto T3;
	
loc T3: while True wait {}
	when True sync O_L1_AS1_1 do {xO_L1_AS1_1' = 0} goto T0;

loc T4: while True wait {}
	when True sync O_CL_TU1_2 do {xO_CL_TU1_2' = 0} goto T5;
	
loc T5: while True wait {}
	when True sync I_L1_TU1_2 do {xI_L1_TU1_2' = 0} goto T6;
	
loc T6: while True wait {}
	when True sync O_L1_AS1_2 do {xO_L1_AS1_2' = 0} goto T0;
	
loc T7: while True wait {}
	when True sync O_L1_TU1_1 do {xO_L1_TU1_1' = 0} goto T8;
	
loc T8: while True wait {}
	when True sync I_CL_TU1_1 do {xI_CL_TU1_1' = 0} goto T0;
	
loc T9: while True wait {}
	when True sync O_L1_TU1_2 do {xO_L1_TU1_2' = 0} goto T10;
	
loc T10: while True wait {}
	when True sync I_CL_TU1_2 do {xI_CL_TU1_2' = 0} goto T0;

end (*  TransportUnit_1 *)



(************************************************************)
  automaton  TransportUnit_2 
(************************************************************)
synclabs: 
I_CL_TU1_1, O_CL_TU2_1, I_L2_TU2_1, O_L2_AS2_1,
I_L2_AS2_1, O_L2_TU2_1, I_CL_TU2_1,
I_CL_TU3_2, O_CL_TU2_2, I_L2_TU2_2, O_L2_AS2_2,
I_L2_AS2_2, O_L2_TU2_2, I_CL_TU2_2;

loc T0: while True wait {}
	when True sync I_CL_TU1_1 do {xI_CL_TU1_1' = 0} goto T1;
	when True sync I_L2_AS2_1 do {xI_L2_AS2_1' = 0} goto T7;
	when True sync I_CL_TU3_2 do {xI_CL_TU3_2' = 0} goto T4;
	when True sync I_L2_AS2_2 do {xI_L2_AS2_2' = 0} goto T9;

loc T1: while True wait {}
	when True sync O_CL_TU2_1 do {xO_CL_TU2_1' = 0} goto T2;

loc T2: while True wait {}
	when True sync I_L2_TU2_1 do {xI_L2_TU2_1' = 0} goto T3;
	
loc T3: while True wait {}
	when True sync O_L2_AS2_1 do {xO_L2_AS2_1' = 0} goto T0;

loc T4: while True wait {}
	when True sync O_CL_TU2_2 do {xO_CL_TU2_2' = 0} goto T5;
	
loc T5: while True wait {}
	when True sync I_L2_TU2_2 do {xI_L2_TU2_2' = 0} goto T6;
	
loc T6: while True wait {}
	when True sync O_L2_AS2_2 do {xO_L2_AS2_2' = 0} goto T0;
	
loc T7: while True wait {}
	when True sync O_L2_TU2_1 do {xO_L2_TU2_1' = 0} goto T8;
	
loc T8: while True wait {}
	when True sync I_CL_TU2_1 do {xI_CL_TU2_1' = 0} goto T0;
	
loc T9: while True wait {}
	when True sync O_L2_TU2_2 do {xO_L2_TU2_2' = 0} goto T10;
	
loc T10: while True wait {}
	when True sync I_CL_TU2_2 do {xI_CL_TU2_2' = 0} goto T0;

end (*  TransportUnit_2 *)


(************************************************************)
(************************************************************)


(************************************************************)
  automaton  TransportUnit_3A 
(************************************************************)
synclabs: 
I_L3_I1, L3_out_TU3_1, O_L3_TU3_1, I_CL_TU3_1, O_CL_TU1_1;

loc T0: while True wait {}
	when True sync I_L3_I1 do {c_I_L3_I1' = 0} goto T1;

loc T1: while True wait {}
	when c_I_L3_I1 <= 1 sync L3_out_TU3_1 do {xL3_out_TU3_1' = 0} goto T2;

loc T2: while True wait {}
	when True sync O_L3_TU3_1 do {xO_L3_TU3_1' = 0} goto T3;
	
loc T3: while True wait {}
	when True sync I_CL_TU3_1 do {xI_CL_TU3_1' = 0} goto T4;

loc T4: while True wait {}
	when True sync O_CL_TU1_1 do {xO_CL_TU1_1' = 0} goto T0;

end (*  TransportUnit_3A *)


(************************************************************)
  automaton  TransportUnit_3B 
(************************************************************)
synclabs: 
I_L3_I2, L3_out_TU3_2, O_L3_TU3_2, I_CL_TU3_2, O_CL_TU2_2;

loc T0: while True wait {}
	when True sync I_L3_I2 do {c_I_L3_I2' = 0} goto T1;

loc T1: while True wait {}
	when c_I_L3_I2 <= 1 sync L3_out_TU3_2 do {xL3_out_TU3_2' = 0} goto T1;
	when True sync O_L3_TU3_2 do {xO_L3_TU3_2' = 0} goto T2;

loc T2: while True wait {}
	when True sync I_CL_TU3_2 do {xI_CL_TU3_2' = 0} goto T3;
	
loc T3: while True wait {}
	when True sync O_CL_TU2_2 do {xO_CL_TU2_2' = 0} goto T0;

end (*  TransportUnit_3B *)



(************************************************************)
  automaton  TransportUnit_3C 
(************************************************************)
synclabs: 
I_CL_TU2_1, O_CL_TU3_1, I_L3_TU3_1, I_CL_TU1_2, O_CL_TU3_2, I_L3_TU3_2;

loc T0: while True wait {}
	when True sync I_CL_TU2_1 do {xI_CL_TU2_1' = 0} goto T1;
	when True sync I_CL_TU1_2 do {xI_CL_TU1_2' = 0} goto T3;

loc T1: while True wait {}
	when True sync O_CL_TU3_1 do {xO_CL_TU3_1' = 0} goto T2;

loc T2: while True wait {}
	when True sync I_L3_TU3_1 do {xI_L3_TU3_1' = 0} goto T0;
	
loc T3: while True wait {}
	when True sync O_CL_TU3_2 do {xO_CL_TU3_2' = 0} goto T4;

loc T4: while True wait {}
	when True sync I_L3_TU3_2 do {xI_L3_TU3_2' = 0} goto T0;

end (*  TransportUnit_3C *)



(************************************************************)
  automaton  AssemblyStation_1  
(************************************************************)
synclabs: 
I_L1_TU1_1, O_L1_AS1_1, task1A, task1B, I_L1_AS1_1, O_L1_TU1_1,
I_L1_TU1_2, O_L1_AS1_2, I_L1_AS1_2, O_L1_TU1_2;

loc T0: while True wait {}
	when True sync I_L1_TU1_1 do {xI_L1_TU1_1' = 0} goto T1;
	when True sync I_L1_TU1_2 do {xI_L1_TU1_2' = 0} goto T4;

loc T1: while True wait {}
	when True sync O_L1_AS1_1 do {xO_L1_AS1_1' = 0} goto T2;

loc T2: while True wait {}
	when True sync task1A do {xtask1A' = 0} goto T2;
	when True sync task1B do {xtask1B' = 0} goto T2;
	when True sync I_L1_AS1_1 do {xI_L1_AS1_1' = 0} goto T3;
	
loc T3: while True wait {}
	when True sync O_L1_TU1_1 do {xO_L1_TU1_1' = 0} goto T0;

loc T4: while True wait {}
	when True sync O_L1_AS1_2 do {xO_L1_AS1_2' = 0} goto T5;
	
loc T5: while True wait {}
	when True sync task1A do {xtask1A' = 0} goto T5;
	when True sync task1B do {xtask1B' = 0} goto T5;
	when True sync I_L1_AS1_2 do {xI_L1_AS1_2' = 0} goto T6;
	
loc T6: while True wait {}
	when True sync O_L1_TU1_2 do {xO_L1_TU1_2' = 0} goto T0;

end (*  AssemblyStation_1  *)


(************************************************************)
  automaton  AssemblyStation_2  
(************************************************************)
synclabs: 
I_L2_TU2_1, O_L2_AS2_1, task2A, task2B, I_L2_AS2_1, O_L2_TU2_1,
I_L2_TU2_2, O_L2_AS2_2, I_L2_AS2_2, O_L2_TU2_2;

loc T0: while True wait {}
	when True sync I_L2_TU2_1 do {xI_L2_TU2_1' = 0} goto T1;
	when True sync I_L2_TU2_2 do {xI_L2_TU2_2' = 0} goto T4;

loc T1: while True wait {}
	when True sync O_L2_AS2_1 do {xO_L2_AS2_1' = 0} goto T2;

loc T2: while True wait {}
	when True sync task2A do {xtask2A' = 0} goto T2;
	when True sync task2B do {xtask2B' = 0} goto T2;
	when True sync I_L2_AS2_1 do {xI_L2_AS2_1' = 0} goto T3;
	
loc T3: while True wait {}
	when True sync O_L2_TU2_1 do {xO_L2_TU2_1' = 0} goto T0;

loc T4: while True wait {}
	when True sync O_L2_AS2_2 do {xO_L2_AS2_2' = 0} goto T5;
	
loc T5: while True wait {}
	when True sync task2A do {xtask2A' = 0} goto T5;
	when True sync task2B do {xtask2B' = 0} goto T5;
	when True sync I_L2_AS2_2 do {xI_L2_AS2_2' = 0} goto T6;
	
loc T6: while True wait {}
	when True sync O_L2_TU2_2 do {xO_L2_TU2_2' = 0} goto T0;

end (*  AssemblyStation_2  *)


(************************************************************)
  automaton  Spec_9 
(************************************************************)
synclabs: 
L3_in_I1, L3_out_TU3_1;

loc T0: while True wait {}
	when True sync L3_in_I1 do {c_L3_in_I1' = 0} goto T1;
	when True sync L3_out_TU3_1 do {xL3_out_TU3_1' = 0} goto ERROR;

loc T1: while True wait {}
	when c_L3_in_I1 <= 3 sync L3_out_TU3_1 do {xL3_out_TU3_1' = 0} goto T0;
	when True sync L3_in_I1 do {c_L3_in_I1' = 0} goto ERROR;
	when c_L3_in_I1 > 3 sync L3_out_TU3_1 do {xL3_out_TU3_1' = 0} goto ERROR;

loc ERROR: while True wait {}

end (*  Spec_9 *)


(************************************************************)
(************************************************************)


init :=
	(*------------------------------------------------------------*)
	(* Initial location *)
	(*------------------------------------------------------------*)
	& loc[InputStation_1] = I0
	& loc[InputStation_2] = I0
	& loc[OutputStation] = I0
	& loc[TransportUnit_1] = T0
	& loc[TransportUnit_2] = T0
	& loc[TransportUnit_3A] = T0
	& loc[TransportUnit_3B] = T0
	& loc[TransportUnit_3C] = T0
	& loc[AssemblyStation_1] = T0
	& loc[AssemblyStation_2] = T0
	& loc[Spec_9] = T0
	
	(*------------------------------------------------------------*)
	(* Initial clock constraints *)
	(*------------------------------------------------------------*)
	& c_L3_in_I1 = 0
	& c_I_L3_I1 = 0
	& xO_L3_TU3_1 = 0
	
	& c_L3_in_I2 = 0
	& c_I_L3_I2 = 0
	& xO_L3_TU3_2 = 0	

	& xI_L3_TU3_1 = 0
	& xO_L3_I1 = 0
	& xproduct1 = 0
	& xI_L3_TU3_2 = 0
	& xO_L3_I2 = 0
	& xproduct2 = 0
	
	& xI_CL_TU3_1 = 0
	& xO_CL_TU1_1 = 0
	& xI_L1_TU1_1 = 0
	& xO_L1_AS1_1 = 0
	
	& xI_L1_AS1_1 = 0
	& xO_L1_TU1_1 = 0
	& xI_CL_TU1_1 = 0
	
	& xI_CL_TU2_2 = 0
	& xO_CL_TU1_2 = 0
	& xI_L1_TU1_2 = 0
	& xO_L1_AS1_2 = 0
	
	& xI_L1_AS1_2 = 0
	& xO_L1_TU1_2 = 0
	& xI_CL_TU1_2 = 0
  
	& xO_CL_TU2_1 = 0
	& xI_L2_TU2_1 = 0
	& xO_L2_AS2_1 = 0
	
	& xI_L2_AS2_1 = 0
	& xO_L2_TU2_1 = 0
	& xI_CL_TU2_1 = 0
	
	& xI_CL_TU3_2 = 0
	& xO_CL_TU2_2 = 0
	& xI_L2_TU2_2 = 0
	& xO_L2_AS2_2 = 0
	
	& xI_L2_AS2_2 = 0
	& xO_L2_TU2_2 = 0
	
	& xL3_out_TU3_1 = 0
	
	& xL3_out_TU3_2 = 0
	
	& xO_CL_TU3_1 = 0 
	& xO_CL_TU3_2 = 0
	
	& xtask1B = 0 
	& xtask1A = 0
	
	& xtask2B = 0 
	& xtask2A = 0
;

(************************************************************)
(* Property specification *)
(************************************************************)

property := unreachable loc[Spec_9] = ERROR;