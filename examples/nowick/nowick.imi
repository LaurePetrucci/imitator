(************************************************************
 *                         IMITATOR
 *
 * Model of the nowick example
 * Source: "Verification of Concurrent Systems with Parametric Delays Using Octahedra" by Clariso and Cortadella (2005)
 *
 * Author          : Christopher Makanga
 * Created         : 2014/08/29
 * Last modified   : 2014/08/29
 * IMITATOR version: 2.6.2
 ************************************************************)

 var 	ckiiAnd, ckOr3, ckOr2, ckOr1, ckAnd1, ckii3And1, ckii3And2 (*ici: toutes les horloges *)
		: clock;

	(* ici: tous les parametres *)
	d3, D3,
	d7, D7,
	d6, D6,
	d5, D5,
	d4, D4,
	d2, D2,
	d1, D1,
			: parameter;
			
(************************************************************)

(************************************************************)
  automaton Or3Gate
(************************************************************)

synclabs: fUp, fDown, gUp, gDown,
	yUp, yDown;

(* Stable *)
loc Or3_000: while True wait {}
	when True sync fUp do {ckOr3' = 0} goto Or3_100;
	when True sync gUp do {ckOr3' = 0} goto Or3_010;

(* Unstable *)
loc Or3_001: while ckOr3 <= D7 wait {}
	when True sync fUp do {} goto Or3_101;
	when True sync gUp do {} goto Or3_011;
	when ckOr3 >= d7 sync yDown do {} goto Or3_000;

(* Unstable *)
loc Or3_010: while ckOr3 <= D7 wait {}
	when True sync fUp do {ckOr3' = 0} goto Or3_110;
	when True sync gDown do {} goto Or3_000;
	when ckOr3 >= d7 sync yUp do {} goto Or3_011;

(* Stable *)
loc Or3_011: while True wait {}
	when True sync fUp do {} goto Or3_111;
	when True sync gDown do {ckOr3' = 0} goto Or3_001;

(* Unstable *)
loc Or3_100: while ckOr3 <= D7 wait {}
	when True sync fDown do {} goto Or3_000;
	when True sync gUp do {ckOr3' = 0} goto Or3_110;
	when ckOr3 >= d7 sync yUp do {} goto Or3_101;

(* Stable *)
loc Or3_101: while True wait {}
	when True sync fDown do {ckOr3' = 0} goto Or3_001;
	when True sync gUp do {} goto Or3_111;

(* Unstable *)
loc Or3_110: while ckOr3 <= D7  wait {}
	when True sync fDown do {ckOr3' = 0} goto Or3_010;
	when True sync gDown do {ckOr3' = 0} goto Or3_100;
	when ckOr3 >= d7 sync yUp do {} goto Or3_111;

(* Stable *)
loc Or3_111: while True wait {}
	when True sync fDown do {} goto Or3_011;
	when True sync gDown do {} goto Or3_101;

end (*OrGate*)


(************************************************************)
  automaton Or2Gate
(************************************************************)
synclabs: eUp, eDown, fUp, fDown,
	xUp, xDown;

(* Stable *)
loc Or2_000: while True wait {}
	when True sync eUp do {ckOr2' = 0} goto Or2_100;
	when True sync fUp do {ckOr2' = 0} goto Or2_010;

(* Unstable *)
loc Or2_001: while ckOr2 <= D6 wait {}
	when True sync eUp do {} goto Or2_101;
	when True sync fUp do {} goto Or2_011;
	when ckOr2 >= d6 sync xDown do {} goto Or2_000;

(* Unstable *)
loc Or2_010: while ckOr2 <= D6 wait {}
	when True sync eUp do {ckOr2' = 0} goto Or2_110;
	when True sync fDown do {} goto Or2_000;
	when ckOr2 >= d6 sync xUp do {} goto Or2_011;

(* Stable *)
loc Or2_011: while True wait {}
	when True sync eUp do {} goto Or2_111;
	when True sync fDown do {ckOr2' = 0} goto Or2_001;

(* Unstable *)
loc Or2_100: while ckOr2 <= D6 wait {}
	when True sync eDown do {} goto Or2_000;
	when True sync fUp do {ckOr2' = 0} goto Or2_110;
	when ckOr2 >= d6 sync xUp do {} goto Or2_101;

(* Stable *)
loc Or2_101: while True wait {}
	when True sync eDown do {ckOr2' = 0} goto Or2_001;
	when True sync fUp do {} goto Or2_111;

(* Unstable *)
loc Or2_110: while ckOr2 <= D6  wait {}
	when True sync eDown do {ckOr2' = 0} goto Or2_010;
	when True sync fDown do {ckOr2' = 0} goto Or2_100;
	when ckOr2 >= d6 sync xUp do {} goto Or2_111;

(* Stable *)
loc Or2_111: while True wait {}
	when True sync eDown do {} goto Or2_011;
	when True sync fDown do {} goto Or2_101;

end (*OrGate*)


(************************************************************)
  automaton Or1Gate
(************************************************************)
synclabs: kUp, kDown, cUp, cDown,
	xUp, xDown;

(* Stable *)
loc Or1_000: while True wait {}
	when True sync kUp do {ckOr1' = 0} goto Or1_100;
	when True sync cUp do {ckOr1' = 0} goto Or1_010;

(* Unstable *)
loc Or1_001: while ckOr1 <= D5 wait {}
	when True sync kUp do {} goto Or1_101;
	when True sync cUp do {} goto Or1_011;
	when ckOr1 >= d5 sync xDown do {} goto Or1_000;

(* Unstable *)
loc Or1_010: while ckOr1 <= D5 wait {}
	when True sync kUp do {ckOr1' = 0} goto Or1_110;
	when True sync cDown do {} goto Or1_000;
	when ckOr1 >= d5 sync xUp do {} goto Or1_011;

(* Stable *)
loc Or1_011: while True wait {}
	when True sync kUp do {} goto Or1_111;
	when True sync cDown do {ckOr1' = 0} goto Or1_001;

(* Unstable *)
loc Or1_100: while ckOr1 <= D5 wait {}
	when True sync kDown do {} goto Or1_000;
	when True sync cUp do {ckOr1' = 0} goto Or1_110;
	when ckOr1 >= d5 sync xUp do {} goto Or1_101;

(* Stable *)
loc Or1_101: while True wait {}
	when True sync kDown do {ckOr1' = 0} goto Or1_001;
	when True sync cUp do {} goto Or1_111;

(* Unstable *)
loc Or1_110: while ckOr1 <= D5  wait {}
	when True sync kDown do {ckOr1' = 0} goto Or1_010;
	when True sync cDown do {ckOr1' = 0} goto Or1_100;
	when ckOr1 >= d5 sync xUp do {} goto Or1_111;

(* Stable *)
loc Or1_111: while True wait {}
	when True sync kDown do {} goto Or1_011;
	when True sync cDown do {} goto Or1_101;

end (*OrGate*)


(************************************************************)
  automaton And1Gate
(************************************************************)

synclabs: hUp, hDown, aUp, aDown, kUp, kDown;

(* Stable *)
loc And1_000: while True wait {}
	when True sync hUp do {} goto And1_100;
	when True sync aUp do {} goto And1_010;

(* Untable *)
loc And1_001: while ckAnd1 <= D4 wait {}
	when True sync hUp do {ckAnd1' = 0} goto And1_101;
	when True sync aUp do {ckAnd1' = 0} goto And1_011;
	when ckAnd1 >= d4 sync kDown do {} goto And1_000;

(* Stable *)
loc And1_010: while True wait {}
	when True sync hUp do {ckAnd1' = 0} goto And1_110;
	when True sync aDown do {} goto And1_000;

(* Untable *)
loc And1_011: while ckAnd1 <= D4 wait {}
	when True sync hUp do {} goto And1_111;
	when True sync aDown do {ckAnd1' = 0} goto And1_001;
	when ckAnd1 >= d4 sync kDown do {} goto And1_010;

(* Stable *)
loc And1_100: while True wait {}
	when True sync hDown do {} goto And1_000;
	when True sync aUp do {ckAnd1' = 0} goto And1_110;

(* Untable *)
loc And1_101: while ckAnd1 <= D4 wait {}
	when True sync hDown do {ckAnd1' = 0} goto And1_001;
	when True sync aUp do {} goto And1_111;
	when ckAnd1 >= d4 sync kDown do {} goto And1_100;

(* Untable *)
loc And1_110: while ckAnd1 <= D4  wait {}
	when True sync hDown do {} goto And1_010;
	when True sync aDown do {} goto And1_100;
	when ckAnd1 >= d4 sync kUp do {} goto And1_111;

(* Stable *)
loc And1_111: while True wait {}
	when True sync hDown do {ckAnd1' = 0} goto And1_011;
	when True sync aDown do {ckAnd1' = 0} goto And1_101;

end (*And1Gate*)


(************************************************************)
  automaton ii3And2Gate
(************************************************************)

synclabs: hUp, hDown, aUp, aDown,bUp, bDown,
	fUp, fDown;


(* Stable *)
loc ii3And2_0000: while True wait {}
	when True sync hUp do {} goto ii3And2_1000;
	when True sync aUp do {} goto ii3And2_0100;
	when True sync bUp do {} goto ii3And2_0010;

(* Unstable *)
loc ii3And2_0001: while ckii3And2 <= D2 wait {}
	when True sync hUp do {ckii3And2' = 0} goto ii3And2_1001;
	when True sync aUp do {ckii3And2' = 0} goto ii3And2_0101;
	when True sync bUp do {ckii3And2' = 0} goto ii3And2_0011;	
	when ckii3And2 >= d2 sync fDown do {} goto ii3And2_0000;

(* Stable *)
loc ii3And2_0010: while True wait {}
	when True sync hUp do {} goto ii3And2_1010;
	when True sync aUp do {ckii3And2' = 0} goto ii3And2_0110;
	when True sync bDown do {} goto ii3And2_0000;

(* Unstable *)
loc ii3And2_0011: while ckii3And2 <= D2 wait {}
	when True sync hUp do {ckii3And2' = 0} goto ii3And2_1011;
	when True sync aUp do {} goto ii3And2_0111;
	when True sync bDown do {ckii3And2' = 0} goto ii3And2_0001;
	when ckii3And2 >= d2 sync fDown do {} goto ii3And2_0010;

(* Stable *)
loc ii3And2_0100: while True wait {} 
	when True sync hUp do {} goto ii3And2_1100;
	when True sync aDown do {} goto ii3And2_0000;
	when True sync bUp do {ckii3And2' = 0} goto ii3And2_0110;

(* Unstable *)
loc ii3And2_0101: while ckii3And2 <= D2 wait {}
	when True sync hUp do {ckii3And2' = 0} goto ii3And2_1101;
	when True sync aDown do {ckii3And2' = 0} goto ii3And2_0001;
	when True sync bUp do {} goto ii3And2_0111;
	when ckii3And2 >= d2 sync fDown do {} goto ii3And2_0100;

(* Unstable *)
loc ii3And2_0110: while ckii3And2 <= D2  wait {}
	when True sync hUp do {ckii3And2' = 0} goto ii3And2_1110;
	when True sync aDown do {} goto ii3And2_0010;
	when True sync bDown do {} goto ii3And2_0100;
	when ckii3And2 >= d2 sync fUp do {} goto ii3And2_0111;

(* Stable *)
loc ii3And2_0111: while True wait {}
	when True sync hUp do {ckii3And2' = 0} goto ii3And2_1111;
	when True sync aDown do {ckii3And2' = 0} goto ii3And2_0011;
	when True sync bDown do {ckii3And2' = 0} goto ii3And2_0101;

(* Stable *)
loc ii3And2_1000: while True wait {}
	when True sync hDown do {} goto ii3And2_0000;
	when True sync aUp do {} goto ii3And2_1100;
	when True sync bUp do {} goto ii3And2_1010;

(* Unstable *)
loc ii3And2_1001: while ckii3And2 <= D2 wait {}
	when True sync hDown do {ckii3And2' = 0} goto ii3And2_0001;
	when True sync aUp do {ckii3And2' = 0} goto ii3And2_1101;
	when True sync bUp do {ckii3And2' = 0} goto ii3And2_1011;
	when ckii3And2 >= d2 sync fDown do {} goto ii3And2_1000;

(* Stable *)
loc ii3And2_1010: while True wait {}
	when True sync hDown do {} goto ii3And2_0010;
	when True sync aUp do {} goto ii3And2_1110;
	when True sync bDown do {} goto ii3And2_1000;

(* Unstable *)
loc ii3And2_1011: while ckii3And2 <= D2 wait {}
	when True sync hDown do {ckii3And2' = 0} goto ii3And2_0011;
	when True sync aUp do {ckii3And2' = 0} goto ii3And2_1111;
	when True sync bDown do {ckii3And2' = 0} goto ii3And2_1001;
	when ckii3And2 >= d2 sync fDown do {} goto ii3And2_1010;

(* Stable *)
loc ii3And2_1100: while True wait {}
	when True sync hDown do {} goto ii3And2_0100;
	when True sync aDown do {} goto ii3And2_1000;
	when True sync bUp do {} goto ii3And2_1110;

(* Unstable *)
loc ii3And2_1101: while ckii3And2 <= D2 wait {}
	when True sync hDown do {ckii3And2' = 0} goto ii3And2_0101;
	when True sync aDown do {ckii3And2' = 0} goto ii3And2_1001;
	when True sync bUp do {ckii3And2' = 0} goto ii3And2_1111;
	when ckii3And2 >= d2 sync fDown do {} goto ii3And2_1100;

(* Stable *)
loc ii3And2_1110: while True wait {}
	when True sync hDown do {ckii3And2' = 0} goto ii3And2_0110;
	when True sync aDown do {} goto ii3And2_1010;
	when True sync bDown do {} goto ii3And2_1100;

(* Unstable *)
loc ii3And2_1111: while ckii3And2 <= D2 wait {}
	when True sync hDown do {} goto ii3And2_0111;
	when True sync aDown do {ckii3And2' = 0} goto ii3And2_1011;
	when True sync bDown do {ckii3And2' = 0} goto ii3And2_1101;
	when ckii3And2 >= d2 sync fDown do {} goto ii3And2_1110;

end (*ii3And2Gate*)


(************************************************************)
  automaton ii3And1Gate
(************************************************************)

synclabs: cUp, cDown, aUp, aDown,bUp, bDown,
	eUp, eDown;

(* Stable *)
loc ii3And1_0000: while True wait {}
	when True sync cUp do {} goto ii3And1_1000;
	when True sync aUp do {} goto ii3And1_0100;
	when True sync bUp do {} goto ii3And1_0010;

(* Unstable *)
loc ii3And1_0001: while ckii3And1 <= D1 wait {}
	when True sync cUp do {ckii3And1' = 0} goto ii3And1_1001;
	when True sync aUp do {ckii3And1' = 0} goto ii3And1_0101;
	when True sync bUp do {ckii3And1' = 0} goto ii3And1_0011;	
	when ckii3And1 >= d1 sync eDown do {} goto ii3And1_0000;

(* Stable *)
loc ii3And1_0010: while True wait {}
	when True sync cUp do {} goto ii3And1_1010;
	when True sync aUp do {ckii3And1' = 0} goto ii3And1_0110;
	when True sync bDown do {} goto ii3And1_0000;

(* Unstable *)
loc ii3And1_0011: while ckii3And1 <= D1 wait {}
	when True sync cUp do {ckii3And1' = 0} goto ii3And1_1011;
	when True sync aUp do {} goto ii3And1_0111;
	when True sync bDown do {ckii3And1' = 0} goto ii3And1_0001;
	when ckii3And1 >= d1 sync eDown do {} goto ii3And1_0010;

(* Stable *)
loc ii3And1_0100: while True wait {} 
	when True sync cUp do {} goto ii3And1_1100;
	when True sync aDown do {} goto ii3And1_0000;
	when True sync bUp do {ckii3And1' = 0} goto ii3And1_0110;

(* Unstable *)
loc ii3And1_0101: while ckii3And1 <= D1 wait {}
	when True sync cUp do {ckii3And1' = 0} goto ii3And1_1101;
	when True sync aDown do {ckii3And1' = 0} goto ii3And1_0001;
	when True sync bUp do {} goto ii3And1_0111;
	when ckii3And1 >= d1 sync eDown do {} goto ii3And1_0100;

(* Unstable *)
loc ii3And1_0110: while ckii3And1 <= D1  wait {}
	when True sync cUp do {ckii3And1' = 0} goto ii3And1_1110;
	when True sync aDown do {} goto ii3And1_0010;
	when True sync bDown do {} goto ii3And1_0100;
	when ckii3And1 >= d1 sync eUp do {} goto ii3And1_0111;

(* Stable *)
loc ii3And1_0111: while True wait {}
	when True sync cUp do {ckii3And1' = 0} goto ii3And1_1111;
	when True sync aDown do {ckii3And1' = 0} goto ii3And1_0011;
	when True sync bDown do {ckii3And1' = 0} goto ii3And1_0101;

(* Stable *)
loc ii3And1_1000: while True wait {}
	when True sync cDown do {} goto ii3And1_0000;
	when True sync aUp do {} goto ii3And1_1100;
	when True sync bUp do {} goto ii3And1_1010;
	
(* Unstable *)
loc ii3And1_1001: while ckii3And1 <= D1 wait {}
	when True sync cDown do {ckii3And1' = 0} goto ii3And1_0001;
	when True sync aUp do {ckii3And1' = 0} goto ii3And1_1101;
	when True sync bUp do {ckii3And1' = 0} goto ii3And1_1011;
	when ckii3And1 >= d1 sync eDown do {} goto ii3And1_1000;

(* Stable *)
loc ii3And1_1010: while True wait {}
	when True sync cDown do {} goto ii3And1_0010;
	when True sync aUp do {} goto ii3And1_1110;
	when True sync bDown do {} goto ii3And1_1000;

(* Unstable *)
loc ii3And1_1011: while ckii3And1 <= D1 wait {}
	when True sync cDown do {ckii3And1' = 0} goto ii3And1_0011;
	when True sync aUp do {ckii3And1' = 0} goto ii3And1_1111;
	when True sync bDown do {ckii3And1' = 0} goto ii3And1_1001;
	when ckii3And1 >= d1 sync eDown do {} goto ii3And1_1010;

(* Stable *)
loc ii3And1_1100: while True wait {}
	when True sync cDown do {} goto ii3And1_0100;
	when True sync aDown do {} goto ii3And1_1000;
	when True sync bUp do {} goto ii3And1_1110;

(* Unstable *)
loc ii3And1_1101: while ckii3And1 <= D1 wait {}
	when True sync cDown do {ckii3And1' = 0} goto ii3And1_0101;
	when True sync aDown do {ckii3And1' = 0} goto ii3And1_1001;
	when True sync bUp do {ckii3And1' = 0} goto ii3And1_1111;
	when ckii3And1 >= d1 sync eDown do {} goto ii3And1_1100;

(* Stable *)
loc ii3And1_1110: while True wait {}
	when True sync cDown do {ckii3And1' = 0} goto ii3And1_0110;
	when True sync aDown do {} goto ii3And1_1010;
	when True sync bDown do {} goto ii3And1_1100;

(* Unstable *)
loc ii3And1_1111: while ckii3And1 <= D1 wait {}
	when True sync cDown do {} goto ii3And1_0111;
	when True sync aDown do {ckii3And1' = 0} goto ii3And1_1011;
	when True sync bDown do {ckii3And1' = 0} goto ii3And1_1101;
	when ckii3And1 >= d1 sync eDown do {} goto ii3And1_1110;

end (*ii3And1Gate*)


(************************************************************)
  automaton iiAndGate
(************************************************************)

synclabs: hUp, hDown, bUp, bDown,
	gUp, gDown;

(* Stable *)
loc iiAnd_000: while True wait {}
	when True sync hUp do {ckiiAnd' = 0} goto iiAnd_100;
	when True sync bUp do {} goto iiAnd_010;

(* Unstable *)
loc iiAnd_001: while ckiiAnd <= D3 wait {}
	when True sync hUp do {} goto iiAnd_101;
	when True sync bUp do {ckiiAnd' = 0} goto iiAnd_011;
	when ckiiAnd >= d3 sync gDown do {} goto iiAnd_000;

(* Stable *)
loc iiAnd_010: while True wait {}
	when True sync hUp do {} goto iiAnd_110;
	when True sync bDown do {} goto iiAnd_000;

(* Unstable *)
loc iiAnd_011: while ckiiAnd <= D3 wait {}
	when True sync hUp do {ckiiAnd' = 0} goto iiAnd_111;
	when True sync bDown do {ckiiAnd' = 0} goto iiAnd_001;
	when ckiiAnd >= d3 sync gDown do {} goto iiAnd_010;

(* Unstable *)
loc iiAnd_100: while ckiiAnd <= D3 wait {}
	when True sync hDown do {} goto iiAnd_000;
	when True sync bUp do {} goto iiAnd_110;
	when ckiiAnd >= d3 sync gUp do {} goto iiAnd_101;

(* Stable *)
loc iiAnd_101: while True wait {}
	when True sync hDown do {ckiiAnd' = 0} goto iiAnd_001;
	when True sync bUp do {ckiiAnd' = 0} goto iiAnd_111;

(* Stable *)
loc iiAnd_110: while True wait {}
	when True sync hDown do {} goto iiAnd_010;
	when True sync bDown do {ckiiAnd' = 0} goto iiAnd_100;

(* Unstable *)
loc iiAnd_111: while ckiiAnd <= D3  wait {}
	when True sync hDown do {ckiiAnd' = 0} goto iiAnd_011;
	when True sync bDown do {} goto iiAnd_101;
	when ckiiAnd >= d3 sync gDown do {} goto iiAnd_110;

end (*iiAndGate*)


(************************************************************)
(* Analysis *)
(************************************************************)

init := True
	(*------------------------------------------------------------
	   INITIAL LOCATION
	  ------------------------------------------------------------*)
	& loc[Or3Gate] = Or3_000
	& loc[Or2Gate] = Or2_000
	& loc[Or1Gate] = Or1_000
	& loc[And1Gate] = And1_000
	& loc[ii3And1Gate] = ii3And1_0000
	& loc[ii3And2Gate] = ii3And2_0000
	& loc[iiAndGate] = iiAnd_000
		
	(*------------------------------------------------------------
	   INITIAL CLOCKS
	  ------------------------------------------------------------*)
	& ckiiAnd = 0
	& ckOr3 = 0
	& ckOr2 = 0
	& ckOr1 = 0
	& ckAnd1 = 0
	& ckii3And1 = 0
	& ckii3And2 = 0
	& ckiiAnd = 0

	(*------------------------------------------------------------
	   PARAMETER CONSTRAINTS
	  ------------------------------------------------------------*)
	& d1 >= 0
	& d2 >= 0
	& d3 >= 0
	& d4 >= 0
	& d5 >= 0
	& d6 >= 0
	& d7 >= 0
	& d1 <= D1
	& d2 <= D2
	& d3 <= D3
	& d4 <= D4
	& d5 <= D5
	& d6 <= D6
	& d7 <= D7
;
end
