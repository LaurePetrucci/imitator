var t     : clock;
    x	  : analog;
    m,
    M,
    T,
    x_min,
    x_max : parameter;

automaton tank

synclabs: start1, start2, waiting, open, close, err;
initially ini;

loc ini: while True wait {}
      when True sync start1 do {t' = 0, x' >= m, x' <= M} goto fill;
      when True sync start2 do {t' = 0, x' >= m, x' <= M} goto drain;

loc fill: while t <= T wait {x' = 4}
      when x <= M sync waiting do {t' = 0, x' = x} goto fill;
      when x >  M sync open do {x' = x} goto drain;
      when x >= x_max sync err goto error;

loc drain: while t <= T wait {x' = -4}
      when x >= m sync waiting do {t' = 0, x' = x} goto drain;
      when x <  m sync close do {x' = x} goto fill;
      when x <= x_min sync err goto error;	  

loc error: while True wait {}
      when True sync err goto error;

end

var init: region;

-- init := loc[tank] = ini & t = 0;
init := loc[tank] = ini & T = 1 & x_min = 0 & x_max = 20;
